import random          
num=[] #just a place holder list before we make the real one 
list_one=[] #This is the list that shows us where the bombs are and has the numbers telling us how many bombs there are in adjacent squares 

def bombs(board_size): #all this does is randomly assign bombs to the place holder list 
    while len(num)<board_size**2:
        x=random.randint(1,6)
        if x==1:
            num.append(1)
        else:
            num.append(0)
       
def numbers():# This takes the place holder list and checks it for where the bombs are and then counts those up so that it displays how many bombs are adjacent to each tile. Values are B,1,2,3,4,5,6,7,8,9
    bombs(board_size)
    for i in range(0,(board_size**2)):
        if num[i]==1:
            list_one.append('B')
        else:
            n=check(i,board_size)
            list_one.append(n)
def check(i,board_size):
    n = 0 #counter of how many bombs are adjacent 
    side = i //board_size  #rest of this function is just checking each position around the given tile 
    down = i % board_size
    if side > 0 and down > 0 and num[i - board_size - 1] == 1:
        n += 1
       
    if side > 0 and num[i - board_size] == 1:
        n += 1
       
    if side > 0 and down < board_size - 1 and num[i - board_size + 1] == 1:
        n += 1
       
    if down > 0 and num[i - 1] == 1:
        n += 1
       
    if down < board_size - 1 and num[i + 1] == 1:
        n += 1

    if side < board_size - 1 and down > 0 and num[i + board_size - 1] == 1:
        n += 1

    if side < board_size - 1 and num[i + board_size] == 1:
        n += 1

    if side < board_size - 1 and down < board_size - 1 and num[i + board_size + 1] == 1:
        n += 1

    return n

def board(board_size): #This is just to show how the list looks in a grid
    for i in range(1,(board_size**2)+1):
        if i%board_size!=0:
            print(list_one[i-1],end='')
        else:
            print(list_one[i-1])
numbers(9)#9 is just a constant it will work with any size we want 
board(9)
